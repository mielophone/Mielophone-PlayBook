<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark"
				width="120"
				creationComplete="itemrenderer1_creationCompleteHandler(event)"
				dataChange="itemrenderer1_dataChangeHandler(event)"
				click="itemrenderer1_clickHandler(event)">
	<s:layout>
		<s:VerticalLayout gap="5" horizontalAlign="center" verticalAlign="top" />
	</s:layout>
	<fx:Script>
		<![CDATA[
			import com.codezen.mse.models.Artist;
			import com.codezen.mse.services.LastFM;
			
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.utils.ObjectProxy;
			
			import views.ArtistInfoView;
			
			// mask
			[Bindable]
			public var roundedMask:Sprite;
			
			private function itemrenderer1_clickHandler(event:MouseEvent):void{
				FlexGlobals.topLevelApplication.navigator.pushView(ArtistInfoView, data as Artist);
			}
			
			private function itemrenderer1_creationCompleteHandler(event:FlexEvent):void
			{
				roundedMask = new Sprite();
				var cornerRadius:uint = 10;
				roundedMask.graphics.clear();
				roundedMask.graphics.beginFill(0xFF0000);
				roundedMask.graphics.drawRoundRect(0, 0, 120, 120, cornerRadius, cornerRadius);
				roundedMask.graphics.endFill();
			}
			
			private function itemrenderer1_dataChangeHandler(event:FlexEvent):void{
				if(data == null) return;
					
				if( data.image == null || data.image.length < 5 ){
					var lfm:LastFM = new LastFM();
					lfm.addEventListener(Event.COMPLETE, onImage);
					lfm.getArtistInfo(data as Artist);
				}
			}
			
			private function onImage(e:Event):void{
				var lfm:LastFM = e.target as LastFM;
				lfm.removeEventListener(Event.COMPLETE, onImage);
				
				data = lfm.artist;
				
				lfm = null;
			}
			
		]]>
	</fx:Script>
	
	<s:BitmapImage width="120" height="120" source="{new ObjectProxy(data).image}" mask="{roundedMask}" maskType="clip"
				   smooth="true" smoothingQuality="high"/>
	<s:Label width="100%" text="{new ObjectProxy(data).name}" textAlign="center" />
	
</s:ItemRenderer>
